{"ast":null,"code":"var _jsxFileName = \"/Users/kaseyprince/memory_click/src/App.js\";\nimport React, { Component } from 'react';\nimport Title from './components/Title';\nimport cards from './cards.json';\nimport Wrapper from './components/Wrapper';\nimport PlayCards from './components/PlayCards';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      score: 0,\n      highScore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highScore) {\n        this.setState({\n          highScore: this.state.score\n        }, function () {});\n      }\n\n      console.log(this.state.score);\n      this.state.cards.forEach(card => {\n        card.count = 1;\n      });\n      alert('Try Again'); // this.setState({score: 0});\n\n      return true;\n    };\n\n    this.countOnClick = id => {\n      this.state.cards.find((o, i) => {\n        console.log(o);\n        console.log(i);\n        console.log(typeof id);\n\n        if (o.id === id) {\n          if (cards[i].count === 0 || typeof cards[i].count === \"undefined\") {\n            cards[i].count = cards[i].count + 1;\n            this.setState({\n              score: this.state.score + 1\n            }, function () {});\n            this.state.cards.sort(() => Math.random() - 1);\n            return true;\n          }\n        } else {\n          this.gameOver();\n        }\n\n        return true;\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Title, {\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.cards.map(cards => React.createElement(PlayCards, {\n      countOnClick: this.countOnClick,\n      key: cards.id,\n      image: cards.image //count={this.count}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kaseyprince/memory_click/src/App.js"],"names":["React","Component","Title","cards","Wrapper","PlayCards","App","state","score","highScore","gameOver","setState","console","log","forEach","card","count","alert","countOnClick","id","find","o","i","sort","Math","random","render","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Title from './components/Title';\nimport cards from './cards.json';\nimport Wrapper from './components/Wrapper';\nimport PlayCards from './components/PlayCards';\n\nclass App extends Component {\n  // Setting this.state.cards to the friends json array\n  state = {\n    cards,\n    score: 0,\n    highScore: 0\n\n  };\n\n\n  gameOver = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({highScore: this.state.score}, function() {\n      });\n    } \n    console.log(this.state.score);\n    this.state.cards.forEach(card => {\n      card.count = 1;\n    });\n    alert('Try Again');\n    // this.setState({score: 0});\n    return true;\n  }\n\n  countOnClick = id => {\n    this.state.cards.find((o, i) => {\n      console.log(o);\n      console.log(i);\n      console.log(typeof(id));\n      if (o.id === id) \n      {\n        if(cards[i].count === 0 ||typeof(cards[i].count)===\"undefined\" ){\n          cards[i].count = cards[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n          });\n          this.state.cards.sort(() => Math.random() - 1)\n          return true; \n     }\n        } else {\n          this.gameOver();\n        }\n      return true;\n    });\n  }\n\n  render() {\n    return (\n    <div>\n        <Title score={this.state.score} highScore={this.state.highScore}></Title>\n      <Wrapper>\n        {this.state.cards.map(cards => (\n          <PlayCards \n            countOnClick={this.countOnClick}\n            key={cards.id}\n            image={cards.image}\n            //count={this.count}\n          />\n        ))}\n     </Wrapper>   \n  </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}